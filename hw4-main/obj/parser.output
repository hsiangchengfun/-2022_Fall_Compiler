State 18 conflicts: 1 reduce/reduce


Grammar

    0 $accept: prog $end

    1 prog: PROGRAM IDENTIFIER LPAREN identifier_list RPAREN SEMICOLON declarations subprogram_declarations compound_statement DOT

    2 identifier_list: IDENTIFIER
    3                | IDENTIFIER COMMA identifier_list

    4 declarations: declarations VAR identifier_list COLON type SEMICOLON
    5             | %empty

    6 type: standard_type
    7     | ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE OF type

    8 num: REALNUMBER
    9    | INTEGERNUM
   10    | SCIENTIFIC

   11 standard_type: INTEGER
   12              | REAL
   13              | STRING

   14 subprogram_declarations: subprogram_declarations subprogram_declaration SEMICOLON
   15                        | %empty

   16 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement

   17 subprogram_head: FUNCTION IDENTIFIER arguments COLON standard_type SEMICOLON
   18                | PROCEDURE IDENTIFIER arguments SEMICOLON

   19 arguments: LPAREN parameter_list RPAREN
   20          | %empty

   21 parameter_list: optional_var identifier_list COLON type
   22               | optional_var identifier_list COLON type SEMICOLON parameter_list

   23 optional_var: VAR
   24             | %empty

   25 compound_statement: PBEGIN optional_statements END

   26 optional_statements: statement_list
   27                    | %empty

   28 statement_list: statement
   29               | statement_list SEMICOLON statement

   30 statement: variable ASSIGNMENT expression
   31          | procedure_statement
   32          | compound_statement
   33          | IF expression THEN statement ELSE statement
   34          | WHILE expression DO statement
   35          | %empty

   36 variable: IDENTIFIER tail

   37 tail: LBRACE expression RBRACE tail
   38     | %empty

   39 procedure_statement: IDENTIFIER
   40                    | IDENTIFIER LPAREN expression_list RPAREN

   41 expression_list: expression
   42                | expression_list COMMA expression

   43 expression: boolexpression
   44           | boolexpression AND boolexpression
   45           | boolexpression OR boolexpression

   46 boolexpression: simple_expression
   47               | simple_expression relop simple_expression

   48 simple_expression: term
   49                  | simple_expression addop term

   50 term: factor
   51     | term mulop factor

   52 factor: IDENTIFIER tail
   53       | IDENTIFIER LPAREN expression_list RPAREN
   54       | num
   55       | LITERALSTR
   56       | LPAREN expression RPAREN
   57       | NOT factor
   58       | SUBOP factor

   59 addop: ADDOP
   60      | SUBOP

   61 mulop: MULOP
   62      | DIVOP

   63 relop: LTOP
   64      | GTOP
   65      | EQOP
   66      | GETOP
   67      | LETOP
   68      | NEQOP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 1
    VAR (259) 4 23
    ARRAY (260) 7
    OF (261) 7
    INTEGER (262) 11
    REAL (263) 12
    STRING (264) 13
    FUNCTION (265) 17
    PROCEDURE (266) 18
    PBEGIN (267) 25
    END (268) 25
    IF (269) 33
    THEN (270) 33
    ELSE (271) 33
    WHILE (272) 34
    DO (273) 34
    NOT (274) 57
    AND (275) 44
    OR (276) 45
    LPAREN <text> (277) 1 19 40 53 56
    RPAREN <text> (278) 1 19 40 53 56
    SEMICOLON <text> (279) 1 4 14 17 18 22 29
    DOT <text> (280) 1
    COMMA <text> (281) 3 42
    COLON <text> (282) 4 17 21 22
    LBRACE <text> (283) 7 37
    RBRACE <text> (284) 7 37
    DOTDOT <text> (285) 7
    ASSIGNMENT <text> (286) 30
    ADDOP <text> (287) 59
    SUBOP <text> (288) 58 60
    MULOP <text> (289) 61
    DIVOP <text> (290) 62
    LTOP <text> (291) 63
    GTOP <text> (292) 64
    EQOP <text> (293) 65
    GETOP <text> (294) 66
    LETOP <text> (295) 67
    NEQOP <text> (296) 68
    IDENTIFIER <text> (297) 1 2 3 17 18 36 39 40 52 53
    REALNUMBER <dval> (298) 8
    INTEGERNUM <val> (299) 7 9
    SCIENTIFIC <text> (300) 10
    LITERALSTR <text> (301) 55


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    prog <ProgNode> (48)
        on left: 1
        on right: 0
    identifier_list <IdentListNode> (49)
        on left: 2 3
        on right: 1 3 4 21 22
    declarations <DeclarNode> (50)
        on left: 4 5
        on right: 1 4 16
    type <TypeNode> (51)
        on left: 6 7
        on right: 4 7 21 22
    num <NumNode> (52)
        on left: 8 9 10
        on right: 54
    standard_type <StandTypeNode> (53)
        on left: 11 12 13
        on right: 6 17
    subprogram_declarations <SubDeclarSNode> (54)
        on left: 14 15
        on right: 1 14 16
    subprogram_declaration <SubDeclarNode> (55)
        on left: 16
        on right: 14
    subprogram_head <SubHeadNode> (56)
        on left: 17 18
        on right: 16
    arguments <ArgumentsNode> (57)
        on left: 19 20
        on right: 17 18
    parameter_list <ParameterListNode> (58)
        on left: 21 22
        on right: 19 22
    optional_var <OptionalVarNode> (59)
        on left: 23 24
        on right: 21 22
    compound_statement <CompoundStatementNode> (60)
        on left: 25
        on right: 1 16 32
    optional_statements <OptionalStatementSNode> (61)
        on left: 26 27
        on right: 25
    statement_list <StatementListNode> (62)
        on left: 28 29
        on right: 26 29
    statement <StatementNode> (63)
        on left: 30 31 32 33 34 35
        on right: 28 29 33 34
    variable <VarNode> (64)
        on left: 36
        on right: 30
    tail <TailNode> (65)
        on left: 37 38
        on right: 36 37 52
    procedure_statement <ProcedureStatementNode> (66)
        on left: 39 40
        on right: 31
    expression_list <ExpressionListNode> (67)
        on left: 41 42
        on right: 40 42 53
    expression <ExpressionNode> (68)
        on left: 43 44 45
        on right: 30 33 34 37 41 42 56
    boolexpression <BoolExpNode> (69)
        on left: 46 47
        on right: 43 44 45
    simple_expression <SimpleExpressionNode> (70)
        on left: 48 49
        on right: 46 47 49
    term <TermNode> (71)
        on left: 50 51
        on right: 48 49 51
    factor <FactorNode> (72)
        on left: 52 53 54 55 56 57 58
        on right: 50 51 57 58
    addop <AddOpNode> (73)
        on left: 59 60
        on right: 49
    mulop <MulNode> (74)
        on left: 61 62
        on right: 51
    relop <RelopNode> (75)
        on left: 63 64 65 66 67 68
        on right: 47


State 0

    0 $accept: . prog $end

    PROGRAM  shift, and go to state 1

    prog  go to state 2


State 1

    1 prog: PROGRAM . IDENTIFIER LPAREN identifier_list RPAREN SEMICOLON declarations subprogram_declarations compound_statement DOT

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: prog . $end

    $end  shift, and go to state 4


State 3

    1 prog: PROGRAM IDENTIFIER . LPAREN identifier_list RPAREN SEMICOLON declarations subprogram_declarations compound_statement DOT

    LPAREN  shift, and go to state 5


State 4

    0 $accept: prog $end .

    $default  accept


State 5

    1 prog: PROGRAM IDENTIFIER LPAREN . identifier_list RPAREN SEMICOLON declarations subprogram_declarations compound_statement DOT

    IDENTIFIER  shift, and go to state 6

    identifier_list  go to state 7


State 6

    2 identifier_list: IDENTIFIER .
    3                | IDENTIFIER . COMMA identifier_list

    COMMA  shift, and go to state 8

    $default  reduce using rule 2 (identifier_list)


State 7

    1 prog: PROGRAM IDENTIFIER LPAREN identifier_list . RPAREN SEMICOLON declarations subprogram_declarations compound_statement DOT

    RPAREN  shift, and go to state 9


State 8

    3 identifier_list: IDENTIFIER COMMA . identifier_list

    IDENTIFIER  shift, and go to state 6

    identifier_list  go to state 10


State 9

    1 prog: PROGRAM IDENTIFIER LPAREN identifier_list RPAREN . SEMICOLON declarations subprogram_declarations compound_statement DOT

    SEMICOLON  shift, and go to state 11


State 10

    3 identifier_list: IDENTIFIER COMMA identifier_list .

    $default  reduce using rule 3 (identifier_list)


State 11

    1 prog: PROGRAM IDENTIFIER LPAREN identifier_list RPAREN SEMICOLON . declarations subprogram_declarations compound_statement DOT

    $default  reduce using rule 5 (declarations)

    declarations  go to state 12


State 12

    1 prog: PROGRAM IDENTIFIER LPAREN identifier_list RPAREN SEMICOLON declarations . subprogram_declarations compound_statement DOT
    4 declarations: declarations . VAR identifier_list COLON type SEMICOLON

    VAR  shift, and go to state 13

    $default  reduce using rule 15 (subprogram_declarations)

    subprogram_declarations  go to state 14


State 13

    4 declarations: declarations VAR . identifier_list COLON type SEMICOLON

    IDENTIFIER  shift, and go to state 6

    identifier_list  go to state 15


State 14

    1 prog: PROGRAM IDENTIFIER LPAREN identifier_list RPAREN SEMICOLON declarations subprogram_declarations . compound_statement DOT
   14 subprogram_declarations: subprogram_declarations . subprogram_declaration SEMICOLON

    FUNCTION   shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    PBEGIN     shift, and go to state 18

    subprogram_declaration  go to state 19
    subprogram_head         go to state 20
    compound_statement      go to state 21


State 15

    4 declarations: declarations VAR identifier_list . COLON type SEMICOLON

    COLON  shift, and go to state 22


State 16

   17 subprogram_head: FUNCTION . IDENTIFIER arguments COLON standard_type SEMICOLON

    IDENTIFIER  shift, and go to state 23


State 17

   18 subprogram_head: PROCEDURE . IDENTIFIER arguments SEMICOLON

    IDENTIFIER  shift, and go to state 24


State 18

   25 compound_statement: PBEGIN . optional_statements END

    PBEGIN      shift, and go to state 18
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    END        reduce using rule 27 (optional_statements)
    END        [reduce using rule 35 (statement)]
    SEMICOLON  reduce using rule 35 (statement)
    $default   reduce using rule 27 (optional_statements)

    compound_statement   go to state 28
    optional_statements  go to state 29
    statement_list       go to state 30
    statement            go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 19

   14 subprogram_declarations: subprogram_declarations subprogram_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 34


State 20

   16 subprogram_declaration: subprogram_head . declarations subprogram_declarations compound_statement

    $default  reduce using rule 5 (declarations)

    declarations  go to state 35


State 21

    1 prog: PROGRAM IDENTIFIER LPAREN identifier_list RPAREN SEMICOLON declarations subprogram_declarations compound_statement . DOT

    DOT  shift, and go to state 36


State 22

    4 declarations: declarations VAR identifier_list COLON . type SEMICOLON

    ARRAY    shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    STRING   shift, and go to state 40

    type           go to state 41
    standard_type  go to state 42


State 23

   17 subprogram_head: FUNCTION IDENTIFIER . arguments COLON standard_type SEMICOLON

    LPAREN  shift, and go to state 43

    $default  reduce using rule 20 (arguments)

    arguments  go to state 44


State 24

   18 subprogram_head: PROCEDURE IDENTIFIER . arguments SEMICOLON

    LPAREN  shift, and go to state 43

    $default  reduce using rule 20 (arguments)

    arguments  go to state 45


State 25

   33 statement: IF . expression THEN statement ELSE statement

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num                go to state 54
    expression         go to state 55
    boolexpression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 26

   34 statement: WHILE . expression DO statement

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num                go to state 54
    expression         go to state 60
    boolexpression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 27

   36 variable: IDENTIFIER . tail
   39 procedure_statement: IDENTIFIER .
   40                    | IDENTIFIER . LPAREN expression_list RPAREN

    LPAREN  shift, and go to state 61
    LBRACE  shift, and go to state 62

    ASSIGNMENT  reduce using rule 38 (tail)
    $default    reduce using rule 39 (procedure_statement)

    tail  go to state 63


State 28

   32 statement: compound_statement .

    $default  reduce using rule 32 (statement)


State 29

   25 compound_statement: PBEGIN optional_statements . END

    END  shift, and go to state 64


State 30

   26 optional_statements: statement_list .
   29 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 65

    $default  reduce using rule 26 (optional_statements)


State 31

   28 statement_list: statement .

    $default  reduce using rule 28 (statement_list)


State 32

   30 statement: variable . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 66


State 33

   31 statement: procedure_statement .

    $default  reduce using rule 31 (statement)


State 34

   14 subprogram_declarations: subprogram_declarations subprogram_declaration SEMICOLON .

    $default  reduce using rule 14 (subprogram_declarations)


State 35

    4 declarations: declarations . VAR identifier_list COLON type SEMICOLON
   16 subprogram_declaration: subprogram_head declarations . subprogram_declarations compound_statement

    VAR  shift, and go to state 13

    $default  reduce using rule 15 (subprogram_declarations)

    subprogram_declarations  go to state 67


State 36

    1 prog: PROGRAM IDENTIFIER LPAREN identifier_list RPAREN SEMICOLON declarations subprogram_declarations compound_statement DOT .

    $default  reduce using rule 1 (prog)


State 37

    7 type: ARRAY . LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE OF type

    LBRACE  shift, and go to state 68


State 38

   11 standard_type: INTEGER .

    $default  reduce using rule 11 (standard_type)


State 39

   12 standard_type: REAL .

    $default  reduce using rule 12 (standard_type)


State 40

   13 standard_type: STRING .

    $default  reduce using rule 13 (standard_type)


State 41

    4 declarations: declarations VAR identifier_list COLON type . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 42

    6 type: standard_type .

    $default  reduce using rule 6 (type)


State 43

   19 arguments: LPAREN . parameter_list RPAREN

    VAR  shift, and go to state 70

    $default  reduce using rule 24 (optional_var)

    parameter_list  go to state 71
    optional_var    go to state 72


State 44

   17 subprogram_head: FUNCTION IDENTIFIER arguments . COLON standard_type SEMICOLON

    COLON  shift, and go to state 73


State 45

   18 subprogram_head: PROCEDURE IDENTIFIER arguments . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 46

   57 factor: NOT . factor

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num     go to state 54
    factor  go to state 75


State 47

   56 factor: LPAREN . expression RPAREN

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num                go to state 54
    expression         go to state 76
    boolexpression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 48

   58 factor: SUBOP . factor

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num     go to state 54
    factor  go to state 77


State 49

   52 factor: IDENTIFIER . tail
   53       | IDENTIFIER . LPAREN expression_list RPAREN

    LPAREN  shift, and go to state 78
    LBRACE  shift, and go to state 62

    $default  reduce using rule 38 (tail)

    tail  go to state 79


State 50

    8 num: REALNUMBER .

    $default  reduce using rule 8 (num)


State 51

    9 num: INTEGERNUM .

    $default  reduce using rule 9 (num)


State 52

   10 num: SCIENTIFIC .

    $default  reduce using rule 10 (num)


State 53

   55 factor: LITERALSTR .

    $default  reduce using rule 55 (factor)


State 54

   54 factor: num .

    $default  reduce using rule 54 (factor)


State 55

   33 statement: IF expression . THEN statement ELSE statement

    THEN  shift, and go to state 80


State 56

   43 expression: boolexpression .
   44           | boolexpression . AND boolexpression
   45           | boolexpression . OR boolexpression

    AND  shift, and go to state 81
    OR   shift, and go to state 82

    $default  reduce using rule 43 (expression)


State 57

   46 boolexpression: simple_expression .
   47               | simple_expression . relop simple_expression
   49 simple_expression: simple_expression . addop term

    ADDOP  shift, and go to state 83
    SUBOP  shift, and go to state 84
    LTOP   shift, and go to state 85
    GTOP   shift, and go to state 86
    EQOP   shift, and go to state 87
    GETOP  shift, and go to state 88
    LETOP  shift, and go to state 89
    NEQOP  shift, and go to state 90

    $default  reduce using rule 46 (boolexpression)

    addop  go to state 91
    relop  go to state 92


State 58

   48 simple_expression: term .
   51 term: term . mulop factor

    MULOP  shift, and go to state 93
    DIVOP  shift, and go to state 94

    $default  reduce using rule 48 (simple_expression)

    mulop  go to state 95


State 59

   50 term: factor .

    $default  reduce using rule 50 (term)


State 60

   34 statement: WHILE expression . DO statement

    DO  shift, and go to state 96


State 61

   40 procedure_statement: IDENTIFIER LPAREN . expression_list RPAREN

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num                go to state 54
    expression_list    go to state 97
    expression         go to state 98
    boolexpression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 62

   37 tail: LBRACE . expression RBRACE tail

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num                go to state 54
    expression         go to state 99
    boolexpression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 63

   36 variable: IDENTIFIER tail .

    $default  reduce using rule 36 (variable)


State 64

   25 compound_statement: PBEGIN optional_statements END .

    $default  reduce using rule 25 (compound_statement)


State 65

   29 statement_list: statement_list SEMICOLON . statement

    PBEGIN      shift, and go to state 18
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 35 (statement)

    compound_statement   go to state 28
    statement            go to state 100
    variable             go to state 32
    procedure_statement  go to state 33


State 66

   30 statement: variable ASSIGNMENT . expression

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num                go to state 54
    expression         go to state 101
    boolexpression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 67

   14 subprogram_declarations: subprogram_declarations . subprogram_declaration SEMICOLON
   16 subprogram_declaration: subprogram_head declarations subprogram_declarations . compound_statement

    FUNCTION   shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    PBEGIN     shift, and go to state 18

    subprogram_declaration  go to state 19
    subprogram_head         go to state 20
    compound_statement      go to state 102


State 68

    7 type: ARRAY LBRACE . INTEGERNUM DOTDOT INTEGERNUM RBRACE OF type

    INTEGERNUM  shift, and go to state 103


State 69

    4 declarations: declarations VAR identifier_list COLON type SEMICOLON .

    $default  reduce using rule 4 (declarations)


State 70

   23 optional_var: VAR .

    $default  reduce using rule 23 (optional_var)


State 71

   19 arguments: LPAREN parameter_list . RPAREN

    RPAREN  shift, and go to state 104


State 72

   21 parameter_list: optional_var . identifier_list COLON type
   22               | optional_var . identifier_list COLON type SEMICOLON parameter_list

    IDENTIFIER  shift, and go to state 6

    identifier_list  go to state 105


State 73

   17 subprogram_head: FUNCTION IDENTIFIER arguments COLON . standard_type SEMICOLON

    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    STRING   shift, and go to state 40

    standard_type  go to state 106


State 74

   18 subprogram_head: PROCEDURE IDENTIFIER arguments SEMICOLON .

    $default  reduce using rule 18 (subprogram_head)


State 75

   57 factor: NOT factor .

    $default  reduce using rule 57 (factor)


State 76

   56 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 107


State 77

   58 factor: SUBOP factor .

    $default  reduce using rule 58 (factor)


State 78

   53 factor: IDENTIFIER LPAREN . expression_list RPAREN

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num                go to state 54
    expression_list    go to state 108
    expression         go to state 98
    boolexpression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 79

   52 factor: IDENTIFIER tail .

    $default  reduce using rule 52 (factor)


State 80

   33 statement: IF expression THEN . statement ELSE statement

    PBEGIN      shift, and go to state 18
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 35 (statement)

    compound_statement   go to state 28
    statement            go to state 109
    variable             go to state 32
    procedure_statement  go to state 33


State 81

   44 expression: boolexpression AND . boolexpression

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num                go to state 54
    boolexpression     go to state 110
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 82

   45 expression: boolexpression OR . boolexpression

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num                go to state 54
    boolexpression     go to state 111
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 83

   59 addop: ADDOP .

    $default  reduce using rule 59 (addop)


State 84

   60 addop: SUBOP .

    $default  reduce using rule 60 (addop)


State 85

   63 relop: LTOP .

    $default  reduce using rule 63 (relop)


State 86

   64 relop: GTOP .

    $default  reduce using rule 64 (relop)


State 87

   65 relop: EQOP .

    $default  reduce using rule 65 (relop)


State 88

   66 relop: GETOP .

    $default  reduce using rule 66 (relop)


State 89

   67 relop: LETOP .

    $default  reduce using rule 67 (relop)


State 90

   68 relop: NEQOP .

    $default  reduce using rule 68 (relop)


State 91

   49 simple_expression: simple_expression addop . term

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num     go to state 54
    term    go to state 112
    factor  go to state 59


State 92

   47 boolexpression: simple_expression relop . simple_expression

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num                go to state 54
    simple_expression  go to state 113
    term               go to state 58
    factor             go to state 59


State 93

   61 mulop: MULOP .

    $default  reduce using rule 61 (mulop)


State 94

   62 mulop: DIVOP .

    $default  reduce using rule 62 (mulop)


State 95

   51 term: term mulop . factor

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num     go to state 54
    factor  go to state 114


State 96

   34 statement: WHILE expression DO . statement

    PBEGIN      shift, and go to state 18
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 35 (statement)

    compound_statement   go to state 28
    statement            go to state 115
    variable             go to state 32
    procedure_statement  go to state 33


State 97

   40 procedure_statement: IDENTIFIER LPAREN expression_list . RPAREN
   42 expression_list: expression_list . COMMA expression

    RPAREN  shift, and go to state 116
    COMMA   shift, and go to state 117


State 98

   41 expression_list: expression .

    $default  reduce using rule 41 (expression_list)


State 99

   37 tail: LBRACE expression . RBRACE tail

    RBRACE  shift, and go to state 118


State 100

   29 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 29 (statement_list)


State 101

   30 statement: variable ASSIGNMENT expression .

    $default  reduce using rule 30 (statement)


State 102

   16 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement .

    $default  reduce using rule 16 (subprogram_declaration)


State 103

    7 type: ARRAY LBRACE INTEGERNUM . DOTDOT INTEGERNUM RBRACE OF type

    DOTDOT  shift, and go to state 119


State 104

   19 arguments: LPAREN parameter_list RPAREN .

    $default  reduce using rule 19 (arguments)


State 105

   21 parameter_list: optional_var identifier_list . COLON type
   22               | optional_var identifier_list . COLON type SEMICOLON parameter_list

    COLON  shift, and go to state 120


State 106

   17 subprogram_head: FUNCTION IDENTIFIER arguments COLON standard_type . SEMICOLON

    SEMICOLON  shift, and go to state 121


State 107

   56 factor: LPAREN expression RPAREN .

    $default  reduce using rule 56 (factor)


State 108

   42 expression_list: expression_list . COMMA expression
   53 factor: IDENTIFIER LPAREN expression_list . RPAREN

    RPAREN  shift, and go to state 122
    COMMA   shift, and go to state 117


State 109

   33 statement: IF expression THEN statement . ELSE statement

    ELSE  shift, and go to state 123


State 110

   44 expression: boolexpression AND boolexpression .

    $default  reduce using rule 44 (expression)


State 111

   45 expression: boolexpression OR boolexpression .

    $default  reduce using rule 45 (expression)


State 112

   49 simple_expression: simple_expression addop term .
   51 term: term . mulop factor

    MULOP  shift, and go to state 93
    DIVOP  shift, and go to state 94

    $default  reduce using rule 49 (simple_expression)

    mulop  go to state 95


State 113

   47 boolexpression: simple_expression relop simple_expression .
   49 simple_expression: simple_expression . addop term

    ADDOP  shift, and go to state 83
    SUBOP  shift, and go to state 84

    $default  reduce using rule 47 (boolexpression)

    addop  go to state 91


State 114

   51 term: term mulop factor .

    $default  reduce using rule 51 (term)


State 115

   34 statement: WHILE expression DO statement .

    $default  reduce using rule 34 (statement)


State 116

   40 procedure_statement: IDENTIFIER LPAREN expression_list RPAREN .

    $default  reduce using rule 40 (procedure_statement)


State 117

   42 expression_list: expression_list COMMA . expression

    NOT         shift, and go to state 46
    LPAREN      shift, and go to state 47
    SUBOP       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    REALNUMBER  shift, and go to state 50
    INTEGERNUM  shift, and go to state 51
    SCIENTIFIC  shift, and go to state 52
    LITERALSTR  shift, and go to state 53

    num                go to state 54
    expression         go to state 124
    boolexpression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 118

   37 tail: LBRACE expression RBRACE . tail

    LBRACE  shift, and go to state 62

    $default  reduce using rule 38 (tail)

    tail  go to state 125


State 119

    7 type: ARRAY LBRACE INTEGERNUM DOTDOT . INTEGERNUM RBRACE OF type

    INTEGERNUM  shift, and go to state 126


State 120

   21 parameter_list: optional_var identifier_list COLON . type
   22               | optional_var identifier_list COLON . type SEMICOLON parameter_list

    ARRAY    shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    STRING   shift, and go to state 40

    type           go to state 127
    standard_type  go to state 42


State 121

   17 subprogram_head: FUNCTION IDENTIFIER arguments COLON standard_type SEMICOLON .

    $default  reduce using rule 17 (subprogram_head)


State 122

   53 factor: IDENTIFIER LPAREN expression_list RPAREN .

    $default  reduce using rule 53 (factor)


State 123

   33 statement: IF expression THEN statement ELSE . statement

    PBEGIN      shift, and go to state 18
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 35 (statement)

    compound_statement   go to state 28
    statement            go to state 128
    variable             go to state 32
    procedure_statement  go to state 33


State 124

   42 expression_list: expression_list COMMA expression .

    $default  reduce using rule 42 (expression_list)


State 125

   37 tail: LBRACE expression RBRACE tail .

    $default  reduce using rule 37 (tail)


State 126

    7 type: ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM . RBRACE OF type

    RBRACE  shift, and go to state 129


State 127

   21 parameter_list: optional_var identifier_list COLON type .
   22               | optional_var identifier_list COLON type . SEMICOLON parameter_list

    SEMICOLON  shift, and go to state 130

    $default  reduce using rule 21 (parameter_list)


State 128

   33 statement: IF expression THEN statement ELSE statement .

    $default  reduce using rule 33 (statement)


State 129

    7 type: ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE . OF type

    OF  shift, and go to state 131


State 130

   22 parameter_list: optional_var identifier_list COLON type SEMICOLON . parameter_list

    VAR  shift, and go to state 70

    $default  reduce using rule 24 (optional_var)

    parameter_list  go to state 132
    optional_var    go to state 72


State 131

    7 type: ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE OF . type

    ARRAY    shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    STRING   shift, and go to state 40

    type           go to state 133
    standard_type  go to state 42


State 132

   22 parameter_list: optional_var identifier_list COLON type SEMICOLON parameter_list .

    $default  reduce using rule 22 (parameter_list)


State 133

    7 type: ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE OF type .

    $default  reduce using rule 7 (type)
